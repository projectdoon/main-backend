generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// complain schema
model Complain {
  id          String   @id @default(uuid())
  userId      String
  Category    String
  Description String
  Imageurl    String
  Status      Int
  Burst       Int
  Lat         Float
  Long        Float
  user        User     @relation(fields: [userId], references: [id])

  @@map("complains") 
}

// user schema
model User {
  id        String   @id @default(uuid())
  phoneNo   Int      @unique
  firstName String
  lastName  String
  Lat       Float
  Long      Float
  email     String   @unique
  complains Complain[]
  
  @@map("users") 
}

//alert
model Alert {
  id       Int      @id @default(autoincrement())
  alert    String
  category Category

  @@map("alerts")
}

// enum for category
enum Category {
  cat1
  cat2
  cat3
}

model Scheme {
  id          Int    @id @default(autoincrement())
  name        String
  description String
  url         String
  category    String

  @@map("schemes") 
}

model Project {
  id                 Int      @id @default(autoincrement())
  projectName        String
  departmentName     String
  projectDescription String   @db.Text
  startDate          DateTime
  endDate            DateTime
  addressLineOne     String?
  addressLineTwo     String?
  district           String
  state              String
  authorityName      String
  organization       String
  status             Int    
  uploadedBy         String

   projectDates  ProjectDate[]
   @@map("projects") 
}

model ProjectDate {
  id              Int      @id @default(autoincrement())
  dateDescription String
  dateName        String
  date            DateTime
  projectID       Int
  project         Project  @relation(fields: [projectID], references: [id], onDelete: Cascade)
}
